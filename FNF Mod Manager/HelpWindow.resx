<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBoAAAEAIACQDQAAFgAAACgAAAAgAAAANAAAAAEAIAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAwA/wAMA/8A
        DCz/AAwX/wAMB/8ADAD/AAwA/wAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8A
        DAD/AAwU/wAMtP8ADK7/AAyH/wAMVP8ADDr/AAwx/wAMDv8ADAT/AAwA/wAMAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wAMAP8ADDH/AAzp/wAM8/8ADOz/AAyU/wAMpv8ADL//AAyS/wAMWf8ADEP/AAwg/wAMHv8A
        DAr/AAwb/wAMOP8ADBj/AAwA/wAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/AAwA/wAMUf8ADLr/AAx0/wAM3v8ADHb/AAyq/gEMwv4BDLX/AAxn/wAMov8A
        DIf/AAyi/wAMoP8ADE//AAyU/wAMm/8ADBP/AAwE/wAMAP8ADAAAAAAAAAAAAAAAAADKQjsA5lBFAN5N
        QgrrWEwI3DkwAPJfUwD/cmUAmy4mErpCNwv/FBwV/wMPFv8ADBn/AAxx/QMOHesLE1TpFhtn5xgctfUK
        E5f+Ag2H/wAMhf8ADK3/AAy6/wAMpP8ADI//AAzA/wAMeP8ADHD/AAw4/wAMKP8ADAgAAAAAAAAAAL1B
        OAD/jnsCfSokg2AfGrNzJiFscSUgUGYhG2FRKyi/KxEPxCoLCapKGBRrpDoyD4AsJStiJR9Vdw8QwckQ
        Fb7LJSTUzScmt80oJzztCRNGxxAVvNIQFYH1BRCY9wEMqvADDcP5AQzC/wAMff8ADHH/AAyf/wAMFQAA
        AAAAAAAAvkE4AM1COCNoMi7LMCws/yAVFP4kFxb7IBUU/WZkZP9naGj/Xl1d/z40NPo8EQ64Rywq2iYd
        HPiACA3+7QAJ/+YEDP/LBw/7qw0R2LYHDMNyEBP2SxIR3W4KC99eAQX/TAUI+5sKD+X7BA+l/wAMgP8A
        DLn/AAwaAAAAALs+NwC8QTgAvDkwPKJcV9/V0tL/ycrK/8XGxv+am5v/5ubm///////+/v7/z8/P/09N
        Tf+Xl5f/X11d/8YfJv//NkD//yQu//A0PP/RLTT/dRAT/900Ov/OMTj/yCYu/784Pv+prKz/kXh39Z8k
        IU3/AAgY/wAMYP8ADCoAAAAAuzw2ALxBOAC/QDcir0M7bK6Cf8jo5OT+/Pz8/6Kiov/l5eX/7Ozs//X1
        9f/09PT/sbGx//T09P+gmpr/9I6T/7KChP+rIij//Hl///iipv/PTlP/8Xh+/+9MU//8ZWz//4CG/+Tf
        3v+qYlzkszowO7A+NgD/AAwA/wAMAAAAAAAAAAAAAAAAAJgwKQCjNCwoeiYgpL+urfj6+/v/tra2/8vL
        y/+VlZX/y8vL//z8/P+vr6//4uLi/9bW1v/l5ub/nqGh/15JSv+8pKX//Pz8/9rNzv+zra7/tHd6//9F
        TP/xm5//pndz7rU7Mp/BQjkbv0I5AAAAAAAAAAAAAAAAAAAAAACxPjgANScmAGwwLHU3Jyb/raqq////
        ///6+vr/vb29/0VFRf/Ly8v//////9TU1P/o6Oj/9fX1/9TU1P/n5+f/1tfX/+Tl5f/p6en/0NDQ/8jI
        yP/n6Oj//8DD/7OJifyJOTJwz0M5F71BOAq9QTgAAAAAAAAAAAAAAAAAAAAAALo/NwBc8fwAh11aj8/O
        zf/y8vL//////7Ozs/9tbW3/bW1t/7CwsP/Ly8v/xsbG/+zs7P/W1tb/zs7O/+vr6//9/f3/3d3d/6Ki
        ov/V1dX/7u7u//r6+v/39/f/dnFx/0ocGbGnNy4QlDMsAAAAAAAAAAAAAAAAAAAAAAAAAAAAu0A4AGBZ
        WwB7Q0FlrJ2o/PHx8v//////+vr6//Hx8f/+/v7/2tra/6CgoP/19fX/4+Pj/76+vv/V1dX/zc3N/6mq
        qf/u7u3/t7e3/42Njf/09PT/vLy8//Hx8f/n6On/Z1RS83chGz19KyUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgyoyAIMpMTCFM6btnGHK/7OiwP/g4OD/+/z7///////l5eX/mJea/+nq6P+0s7T/zc3M/9HQ
        0v/BwsD/mJKe/3p0gf/DxML/y8zK/9/g3/++v77/y8vM/8PFxP90XVvrgiIbLJIzKwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACWMzIAkTEiGIQvg9SfOOv/gzHB/2k8if92ZIP/rpu8/7mnyP9qPJT/TzZo/3pH
        p/+nj7n/i2Kp/3RRjf+MWbb/aCii/3RSlv+bjqn/a1KF/3tSpP9oN5f/pKCs/66XlO2HJB0wmTYuAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALxBNwDDQzcXpDkxwIgyo/+DMc3/dyqy/2YjmP+IMMn/lTna/4wz
        0P+NM9n/ey3C/0Ubav+UN+H/nDjr/3srtf+DMMH/jTLW/2Qknf94LML/cSi6/3kqtfuCYGvPjWtow4gx
        KjGGMSsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu0E4ALtANyi3PzGaiDF/+Yk04f9mJ6H/TR1z/2on
        nf+QNNT/jTPO/5g33/+PNdT/dSuw/4002/+QNeD/bSio/38uvP+ZOOH/iDLJ/5c44v9mJp3/XiNu9XIj
        F3SOHxkTrT41Aqw7MgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3PTQAvEE4AMFCJSOCLG6vhi3U/2Mi
        of9AGGr/aSip/30vwP+KMsn/jTPH/34urv97Lar/iDGW24kyp+yAMMr/bimy/5c46/+MNNP/gi+//4Qw
        wf99Lrj/XCFQ3o8xGR2dNi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6PzUARRhfAH0r
        QzV8Koeuhi286Wklov5nJ6P+YCRq12glU5Z2KVtweCpdlnQpX7KNMU80iTBddIkwaed4K2P1eCuEwmwm
        h9hxKa3/jjTN/YszrONzKVaTlDMWD543LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADycQAAdCYUAJI0BAd1KT0uaCRLZmEiU5d4KjQo0UgAAqA3HwCmOS0IlTMgDbE+MgDDQiULvEExXLY/
        MVyZNBYOdCorM30jV6euGD6q0BAVZvgFCT7/AAwr/wAMDf8ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJKAACpPgAAnTgABKY6AADDRQAAAAAAAAAAAAAAAAAAAAAAAL1B
        OAC9QTgCvEE4BMZIOADy7m8A+hkJBv8AAhT/AAgU/wAMF/8ADBX/AAwI/wAMAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////h////4A///+AAH//gAAfzgAAA4AAAAOAA
        AADgAAAA4AAAB/AAAAfwAAAH8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP+AAAH/wAAB/+BIAP/9/MD///
        //////////////////8=
</value>
  </data>
</root>